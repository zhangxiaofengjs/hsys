<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hsys.mappers.UserMapper">
	<resultMap id="userRoleResultMap" type="userRoleModel" >  
        <id column="ur_id" property="id"/>  
        <result column="ur_role" property="role"/>  
    </resultMap>
	<resultMap id="companyResultMap" type="companyModel" >  
        <id column="c_id" property="id"/>  
        <result column="c_name" property="name"/>  
    </resultMap>
   <resultMap id="schoolResultMap" type="schoolModel" >  
        <id column="s_id" property="id"/>  
        <result column="s_name" property="name"/>
    </resultMap>
	<resultMap id="groupResultMap" type="groupModel" >  
        <id column="g_id" property="id"/>  
        <result column="g_name" property="name"/>  
    </resultMap>
	<resultMap id="userResultMap" type="userModel" >  
        <id column="u_id" property="id"/>  
        <result column="u_no" property="no"/>  
        <result column="u_name" property="name"/>  
        <result column="u_sex" property="sex"/>  
        <result column="u_spelling" property="spelling"/>
        <result column="u_phone_number" property="phoneNumber"/>  
        <result column="u_addr" property="address"/>
        <result column="u_place" property="place"/>
        <result column="u_mail" property="mail"/>
        <result column="u_pwd" property="password"/>
        <result column="u_id_number" property="idNumber"/>
        <result column="u_major" property="major"/>
        <result column="u_degree" property="degree"/>
        <result column="u_graduate_date" property="graduateDate"/>
        <result column="u_enter_date" property="enterDate"/>
        <result column="u_exit_date" property="exitDate"/>
        <association property="group" resultMap="groupResultMap"/>
        <association property="company" resultMap="companyResultMap"/>
        <association property="school"  resultMap="schoolResultMap"/>
        <collection property="roles" ofType="userRoleModel" resultMap="userRoleResultMap" /> 
    </resultMap>

	<select id="queryList" resultMap="userResultMap">
		select u.c_id as u_id,
			   u.c_no as u_no,
			   u.c_name as u_name,
			   u.c_sex as u_sex,
			   u.c_phone_number as u_phone_number,
			   u.c_spelling as u_spelling,
			   u.c_mail as u_mail,
			   u.c_address as u_addr,
			   u.c_place as u_place,
			   <choose>
	                <when  test="cond.password != null">
			   			u.c_password as u_pwd,
			   		</when>
			   		<otherwise>
			   			'' as u_pwd,
			   		</otherwise>
			   </choose>
			   u.c_id_number as u_id_number,
			   u.c_major as u_major,
			   u.c_degree as u_degree,
			   u.c_graduate_date as u_graduate_date,
			   u.c_enter_date as u_enter_date,
			   u.c_exit_date as u_exit_date,
			   g.c_id as g_id,
			   g.c_name as g_name,
			   c.c_id as c_id,
			   c.c_name as c_name,
			   s.c_id as s_id,
			   s.c_name as s_name,
			   ur.c_id as ur_id,
			   ur.c_role as ur_role
		from user_tbl as u
		left join school_tbl as s on s.c_id=u.c_school_id
		left join company_tbl as c on c.c_id=u.c_company_id
		left join user_group_tbl as ug on ug.c_user_id=u.c_id
		left join group_tbl as g on g.c_id=ug.c_group_id
		<choose>
			<when test="cond.containsDisableRole != null">
				left join user_role_tbl as ur on ur.c_user_id=u.c_id
			</when>
			<otherwise>
				left join (select * from user_role_tbl where c_enable=1) as ur on ur.c_user_id=u.c_id
			</otherwise>
		</choose>
		<where>
			<if test="cond.id != null">
				and u.c_id = #{id}
			</if>
			<if test="cond.no != null">
				<choose>
	                <when test="cond.fuzzyNo != null">
	                   	and u.c_no like '%${no}%'
	                </when>
	                <otherwise>
	                    and u.c_no=#{no}
	                </otherwise>
	            </choose>
	        </if>
			<if test="cond.name != null">
				and u.c_name = #{name}
			</if>
			<if test="cond.groupId != null">
				and g.c_id = #{cond.groupId}
			</if>
			<if test="cond.groupIds != null">
				and g.c_id in
				<foreach item="groupId" collection="cond.groupIds" separator="," open="(" close=")" index="i">
				 	#{groupId}
				</foreach>
			</if>
			<if test="cond.hiddenFlag != null">
				and u.c_hidden_flag=#{cond.hiddenFlag}
			</if>
			<if test="cond.exitDateNull != null">
				and u.c_exit_date is null
			</if>
			<if test="cond.exitDateNotNull != null">
				and u.c_exit_date is not null
			</if>
			<if test="cond.companyId != null">
				and u.c_company_id = #{cond.companyId}
			</if>
			<if test="cond.schoolId != null">
				and u.c_school_id = #{cond.schoolId}
			</if>
		</where>
		order by u.c_no
	</select>

	<insert id="add" parameterType="userModel">
    	insert into user_tbl (
    		c_no,
    		c_name,
    		c_password,
    		c_sex,
    		c_spelling,
    		c_mail,
    		c_place,
    		c_address,
    		c_id_number,
    		c_major,
    		c_degree,
    		c_graduate_date,
    		c_enter_date,
    		c_exit_date
    		)
    	values (
    		#{no},
    		#{name},
    		#{password},
    		#{sex},
    		#{spelling},
    		#{mail},
    		#{place},
    		#{address},
    		#{idNumber},
    		#{major},
    		#{degree},
    		#{graduateDate},
    		#{enterDate},
    		#{exitDate}
    	)
      	<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      		select LAST_INSERT_ID() as id
      	</selectKey>
    </insert>
 
 	<insert id="addRole" parameterType="userRoleModel">
    	insert into user_role_tbl (
    		c_user_id,
    		c_role,
    		c_enable)
    	values (
    		#{cond.userId},
    		#{role},
    		#{enable}
    	)
    </insert>
    
	<update id="update">
    	update user_tbl
		<set>
    		<if test="update.password != null">
				c_password = #{password},
			</if>
    		<if test="update.sex != null">
				c_sex = #{sex},
			</if>
			<if test="update.spelling != null">
				c_spelling = #{spelling},
			</if>
    		<if test="update.name != null">
				c_name = #{name},
			</if>
    		<if test="update.place != null">
				c_place = #{place},
			</if>
    		<if test="update.companyName != null">
				c_company_id = #{company.id},
			</if>
    		<if test="update.mail != null">
				c_mail = #{mail},
			</if>
    		<if test="update.major != null">
				c_major = #{major},
			</if>
    		<if test="update.enterDate != null">
				c_enter_date = #{enterDate},
			</if>
    		<if test="update.phoneNumber != null">
				c_phone_number = #{phoneNumber},
			</if>
    		<if test="update.degree != null">
				c_degree = #{degree},
			</if>
    		<if test="update.address != null">
				c_address = #{address},
			</if>
    		<if test="update.idNumber != null">
				c_id_number = #{idNumber},
			</if>
    		<if test="update.school != null">
				c_school_id = #{school.id},
			</if>
    		<if test="update.exitDate != null">
				c_exit_date = #{exitDate},
			</if>
    		<if test="update.graduateDate != null">
				c_graduate_date = #{graduateDate},
			</if>
		</set>
    	<where>
			c_id = #{id}
		</where>
    </update>

	<update id="updateRole">
    	update user_role_tbl
		<set>
			c_enable = #{enable}
		</set>
    	<where>
			c_user_id=#{cond.userId} and
			c_role=#{role}
		</where>
    </update>
    
</mapper>